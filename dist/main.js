(()=>{"use strict";var n={183:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"@keyframes blinkHit {\n    50% {\n        background-color:pink;\n    }\n}\n\nbody {\n    background-color: darkblue;\n    color:aliceblue;\n    display:flex;\n    height:100%;\n    width:100%;\n    justify-content: space-evenly;\n    align-items:center;\n    position:absolute;\n}\n\n\n.mainContainer{\n    display:flex;;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height:80%;\n    width:80%;\n}\n\n.mainHeader {\n    height:10%;\n}\n\n.msgBox{\n    font-size: 4rem;\n}\n\n\n.mainBody{\n    \n    display:none;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n    \n}\n\n\n.namePlate{\n    display:flex;\n    align-items: center;\n}\n\n.gridContainer{\n    display:flex;\n    justify-content: center;\n    align-items:center;\n    height:80%;\n    width:100%;\n    flex-direction: column;\n    \n\n}\n\n.invisDiv {\n    width:100px;\n    height:200px;\n}\n\n.namePlate {\n    display:flex;\n    height:20%;\n    margin:10px;\n}\n\n.gameGrid {\n    display:grid;\n    rotate: -90deg;\n    grid-template-columns: repeat(10,50px);\n    grid-template-rows: repeat(10,50px);\n    height:500px;\n    width:500px;\n    border:1px solid pink;\n\n}\n\n.box0{\n    border: 1px solid black;\n}\n.box0:hover{\n    background-color: blanchedalmond;\n    cursor:grab;\n}\n.boxNoHov{\n    border: 1px solid black;\n}\n\n\n.box1{\n    border: 1px solid cyan;\n    background:cyan;\n}\n\n.box2{\n    border: 1px solid red;\n    background:red;\n}\n\n.boxShip{\n    background:black;\n    border: 1px solid black;\n\n}","",{version:3,sources:["webpack://./src/mainContainer.css"],names:[],mappings:"AAAA;IACI;QACI,qBAAqB;IACzB;AACJ;;AAEA;IACI,0BAA0B;IAC1B,eAAe;IACf,YAAY;IACZ,WAAW;IACX,UAAU;IACV,6BAA6B;IAC7B,kBAAkB;IAClB,iBAAiB;AACrB;;;AAGA;IACI,YAAY;IACZ,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,eAAe;AACnB;;;AAGA;;IAEI,YAAY;IACZ,6BAA6B;IAC7B,WAAW;IACX,mBAAmB;;AAEvB;;;AAGA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,UAAU;IACV,UAAU;IACV,sBAAsB;;;AAG1B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,sCAAsC;IACtC,mCAAmC;IACnC,YAAY;IACZ,WAAW;IACX,qBAAqB;;AAEzB;;AAEA;IACI,uBAAuB;AAC3B;AACA;IACI,gCAAgC;IAChC,WAAW;AACf;AACA;IACI,uBAAuB;AAC3B;;;AAGA;IACI,sBAAsB;IACtB,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,uBAAuB;;AAE3B",sourcesContent:["@keyframes blinkHit {\n    50% {\n        background-color:pink;\n    }\n}\n\nbody {\n    background-color: darkblue;\n    color:aliceblue;\n    display:flex;\n    height:100%;\n    width:100%;\n    justify-content: space-evenly;\n    align-items:center;\n    position:absolute;\n}\n\n\n.mainContainer{\n    display:flex;;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height:80%;\n    width:80%;\n}\n\n.mainHeader {\n    height:10%;\n}\n\n.msgBox{\n    font-size: 4rem;\n}\n\n\n.mainBody{\n    \n    display:none;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n    \n}\n\n\n.namePlate{\n    display:flex;\n    align-items: center;\n}\n\n.gridContainer{\n    display:flex;\n    justify-content: center;\n    align-items:center;\n    height:80%;\n    width:100%;\n    flex-direction: column;\n    \n\n}\n\n.invisDiv {\n    width:100px;\n    height:200px;\n}\n\n.namePlate {\n    display:flex;\n    height:20%;\n    margin:10px;\n}\n\n.gameGrid {\n    display:grid;\n    rotate: -90deg;\n    grid-template-columns: repeat(10,50px);\n    grid-template-rows: repeat(10,50px);\n    height:500px;\n    width:500px;\n    border:1px solid pink;\n\n}\n\n.box0{\n    border: 1px solid black;\n}\n.box0:hover{\n    background-color: blanchedalmond;\n    cursor:grab;\n}\n.boxNoHov{\n    border: 1px solid black;\n}\n\n\n.box1{\n    border: 1px solid cyan;\n    background:cyan;\n}\n\n.box2{\n    border: 1px solid red;\n    background:red;\n}\n\n.boxShip{\n    background:black;\n    border: 1px solid black;\n\n}"],sourceRoot:""}]);const s=a},686:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,".openingContainer{\n     \n    display:flex;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n}\n\n#startGameButton{\n    display:flex;\n    border-radius: 10%;\n    background-color: green;\n    align-items: center;\n    justify-content: center;\n    width:300px;\n    height:150px;\n}\n\n#startGameButton:hover{\n    cursor:grab;\n    background-color: greenyellow;\n}","",{version:3,sources:["webpack://./src/openContainer.css"],names:[],mappings:"AAAA;;IAEI,YAAY;IACZ,6BAA6B;IAC7B,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC",sourcesContent:[".openingContainer{\n     \n    display:flex;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n}\n\n#startGameButton{\n    display:flex;\n    border-radius: 10%;\n    background-color: green;\n    align-items: center;\n    justify-content: center;\n    width:300px;\n    height:150px;\n}\n\n#startGameButton:hover{\n    cursor:grab;\n    background-color: greenyellow;\n}"],sourceRoot:""}]);const s=a},811:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,".placementMsgBox {\n    font-size: 2rem;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    width:500px;\n    height:50px;\n}\n\n.placementContainer{\n     \n    display:none;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n}\n\n#placeGrid {\n    rotate: -90deg;\n}\n\n.placeDiv {\n    border: 1px solid pink;\n}\n\n.placeDivHov{\n    border: 1px solid pink;\n    background-color: blanchedalmond;\n}\n\n.alreadyPlaced {\n    background-color: red;\n}\n\n.optionsMenu{\n    display:flex;\n    flex-direction: column;;\n}\n\n.orientationButton {\n    display:flex;\n    cursor:grab;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10%;\n    width:200px;\n    height:50px;\n    color:red;\n    font-weight: bold;\n    background-color: aqua;\n}\n\n#autofill {\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 25px;\n    background-color: greenyellow;\n    color:brown\n}\n\n#autofill:hover{\n    cursor:grab;\n    background-color: brown;\n    color:greenyellow;\n}\n\n.orientationButton:hover {\nbackground-color: rgb(250, 101, 255);\ncursor:grab;\n}\n\n.placeBtns{\n    display:flex;\n    font-size:1rem;\n    cursor:grab;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10%;\n    width:300px;\n    height:50px;\n    color:red;\n    font-weight: bold;\n    background-color: aqua;\n    margin-left:50px;\n    margin-right:50px;\n}\n\n","",{version:3,sources:["webpack://./src/placementContainer.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,uBAAuB;IACvB,WAAW;IACX,WAAW;AACf;;AAEA;;IAEI,YAAY;IACZ,sBAAsB;IACtB,6BAA6B;IAC7B,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;IACtB,gCAAgC;AACpC;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,SAAS;IACT,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,6BAA6B;IAC7B;AACJ;;AAEA;IACI,WAAW;IACX,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;AACA,oCAAoC;AACpC,WAAW;AACX;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,WAAW;IACX,WAAW;IACX,SAAS;IACT,iBAAiB;IACjB,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;AACrB",sourcesContent:[".placementMsgBox {\n    font-size: 2rem;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    width:500px;\n    height:50px;\n}\n\n.placementContainer{\n     \n    display:none;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height:100%;\n    align-items: center;\n}\n\n#placeGrid {\n    rotate: -90deg;\n}\n\n.placeDiv {\n    border: 1px solid pink;\n}\n\n.placeDivHov{\n    border: 1px solid pink;\n    background-color: blanchedalmond;\n}\n\n.alreadyPlaced {\n    background-color: red;\n}\n\n.optionsMenu{\n    display:flex;\n    flex-direction: column;;\n}\n\n.orientationButton {\n    display:flex;\n    cursor:grab;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10%;\n    width:200px;\n    height:50px;\n    color:red;\n    font-weight: bold;\n    background-color: aqua;\n}\n\n#autofill {\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 25px;\n    background-color: greenyellow;\n    color:brown\n}\n\n#autofill:hover{\n    cursor:grab;\n    background-color: brown;\n    color:greenyellow;\n}\n\n.orientationButton:hover {\nbackground-color: rgb(250, 101, 255);\ncursor:grab;\n}\n\n.placeBtns{\n    display:flex;\n    font-size:1rem;\n    cursor:grab;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10%;\n    width:300px;\n    height:50px;\n    color:red;\n    font-weight: bold;\n    background-color: aqua;\n    margin-left:50px;\n    margin-right:50px;\n}\n\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);r&&a[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],s=0;s<n.length;s++){var l=n[s],A=r.base?l[0]+r.base:l[0],c=o[A]||0,u="".concat(A," ").concat(c);o[A]=c+1;var d=t(u),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var h=i(p,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:h,references:1})}a.push(u)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var s=t(o[a]);e[s].references--}for(var l=r(n,i),A=0;A<o.length;A++){var c=t(o[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),o=t(569),a=t.n(o),s=t(565),l=t.n(s),A=t(216),c=t.n(A),u=t(589),d=t.n(u),p=t(686),h={};h.styleTagTransform=d(),h.setAttributes=l(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=c(),e()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;var m=t(183),f={};f.styleTagTransform=d(),f.setAttributes=l(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=c(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;var g=t(811),B={};B.styleTagTransform=d(),B.setAttributes=l(),B.insert=a().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=c(),e()(g.Z,B),g.Z&&g.Z.locals&&g.Z.locals;class C{constructor(){this.board=new Array(10).fill().map((()=>new Array(10).fill(0))),this.size=10,this.orientation="Y",this.ships=[],this.cpu=!1,this.name="",this.message=""}placeShip(n,e){let t=this.board,r=n.length,i=this.orientation,o=parseInt(e[0]),a=parseInt(e[1]);if("X"===i){if(!0===function(n,e,t){let r=parseInt(n[0]),i=parseInt(n[1]);if(0!==t[r][i])return!1;for(let n=0;n<e;n++)if(r+n>9||0!==t[r+n][i])return!1;return!0}(e,r,t)){this.ships.push(n);for(let e=0;e<r;e++)t[o+e][a]=n,n.placed=!0}}else if("Y"===i&&!0===function(n,e,t){let r=parseInt(n[0]),i=parseInt(n[1]);if(0!==t[r][i])return!1;for(let n=0;n<e;n++)if(0!==t[r][i-n]||i-n<0)return!1;return!0}(e,r,t)){this.ships.push(n);for(let e=0;e<r;e++)t[o][a-e]=n,n.placed=!0}return!1}receiveAttack(n){let e=parseInt(n[0]),t=parseInt(n[1]),r=this.board;return 0===r[e][t]?(r[e][t]=1,this.message="Shot Missed. Fire again!"):1===r[e][t]||2===r[e][t]?this.message="Invalid Space. Fire again!":(r[e][t].hit(),this.message="HIT!",r[e][t]=2)}checkAllSunk(){for(let n=0;n<this.ships.length;n++)if(!1===this.ships[n].sunkStatus)return!1;return!0}}class I{constructor(n,e){this.ship=n,this.length=e,this.hits=0,this.sunkStatus=!1,this.placed=!1}hit(){if(this.hits+=1,this.hits===this.length)return this.isSunk(),setTimeout((()=>{let n=document.getElementById("msgBox");n.innerText=`A ${this.ship} was just sunk!!`,n.setAttribute("style","animation: blinkHit .02s step-end 18"),setTimeout((()=>{n.setAttribute("style","animation: none")}),250)}),300),this.sunkStatus}isSunk(){return this.hits===this.length&&(this.sunkStatus=!0),this.sunkStatus}}class y{constructor(){this.p1=new C,this.p2=new C,this.p1RdyStatus=!1,this.p2RdyStatus=!1,this.p1Queue,this.p2Queue}generateShipQueue(){let n=new I("Carrier",5),e=new I("Battleship",4),t=new I("Destroyer",3),r=new I("Submarine",3);return[new I("Patrol Boat",2),r,t,e,n]}autoGenerate(n,e,t){for(;!1===t;){let r=e[e.length-1];for(;!1===r.placed;){let e=v();n.orientation=e;let t=b();n.placeShip(r,t)}e.pop(),void 0===e[e.length-1]&&(t=!0)}}p1PlaceShip(n){let e=this.p1Queue[this.p1Queue.length-1];return this.p1.placeShip(e,n),!1===e.placed?console.log("not successfully placed"):(this.p1Queue.pop(),void 0===this.p1Queue[this.p1Queue.length-1]?(this.autoGenerate(this.p2,this.p2Queue,this.p2RdyStatus),this.p2RdyStatus=!0,this.p1RdyStatus=!0):void 0)}p1MakeAttack(n){if(this.p2.board[n[0]][n[1]]>0)return console.log("pick another spot");if(this.p2.receiveAttack(n),this.p2.checkAllSunk())return this.winnerFound(this.p1);if(!0===this.p2.cpu){let n=b();for(;this.p1.board[n[0]][n[1]]>0;)n=b();if(this.p1.receiveAttack(n),this.p1.checkAllSunk())return this.winnerFound(this.p2)}}winnerFound(n){let e=document.getElementById("msgBox"),t=document.getElementById("p1Grid"),r=document.getElementById("p2Grid");t.style.pointerEvents="none",r.style.pointerEvents="none",setTimeout((()=>{e.innerText=`${n.name} WINS!!`}),500)}resetBoard(){this.p1=new C,this.p2=new C,this.p1RdyStatus=!1,this.p2RdyStatus=!1,this.p1Queue=[],this.p2Queue=[]}}function b(){let n=[0,0];return n[0]=Math.floor(10*Math.random()),n[1]=Math.floor(10*Math.random()),n}function v(){let n="";return n=Math.floor(10*Math.random())>4?"Y":"X",n}let x=document.getElementById("p1Grid"),k=document.getElementById("p2Grid");function E(n){let e=n.p1.board.flat(),t=n.p2.board.flat();const r=Y();for(let i=0;i<100;i++){let o=j(e[i],n.p1.cpu);o.setAttribute("id",`${r[i]}`);let a=j(t[i],n.p2.cpu);a.setAttribute("id",`${r[i]}`),a.addEventListener("click",(()=>{n.p1MakeAttack([`${r[i][1]}`,`${r[i][2]}`]),S(n),w(),E(n)})),x.appendChild(o),k.appendChild(a)}}function S(n){let e=document.querySelector(".msgBox"),t=n.p2.message;e.innerText=`${t}`;let r=document.getElementById("p2Grid");"HIT!"===t.slice(-4)&&(r.setAttribute("style","animation: blinkHit .02s step-end 18"),setTimeout((()=>{r.setAttribute("style","animation: none")}),250))}function w(){for(;x.firstChild;)x.removeChild(x.firstChild);for(;k.firstChild;)k.removeChild(k.firstChild)}function Y(){let n=[];for(let e=0;e<10;e++)for(let t=0;t<10;t++){let r="a"+e+t;n.push(r)}return n}function W(){let n=document.querySelector(".openingContainer"),e=document.querySelector(".placementContainer");n.style.display="none",e.style.display="flex";let t=new y;t.p1Queue=t.generateShipQueue(),t.p2Queue=t.generateShipQueue(),t.p2.cpu=!0,t.p1.name="PLAYER 1",function(n){let e=document.getElementById("p1Name"),t=document.getElementById("p2Name");e.innerText=n.p1.name,t.innerText="COMPUTER"}(t),T(t);let r=document.querySelector(".orientationButton"),i=document.getElementById("autofill");r.addEventListener("click",(()=>{!function(n){"Y"===n.p1.orientation?n.p1.orientation="X":n.p1.orientation="Y"}(t),T(t)})),i.addEventListener("click",(()=>{t.autoGenerate(t.p1,t.p1Queue,t.p1RdyStatus),T(t)}))}function j(n,e){let t=document.createElement("div");t.className="box0";let r=document.createElement("div");r.className="boxNoHov";let i=document.createElement("div");i.className="box1";let o=document.createElement("div");o.className="box2";let a=document.createElement("div");return a.className="boxShip",!1===e?2==n?o:1==n?i:"object"==typeof n?a:r:!0===e?2==n?o:1==n?i:t:void 0}function T(n){document.querySelector(".optionsMenu").style.display="flex",function(){let n=document.getElementById("placeGrid");for(;n.firstChild;)n.removeChild(n.firstChild)}();const e=Y();let t=n.p1Queue[n.p1Queue.length-1],r=n.p1.board.flat(),i=document.getElementById("placeGrid"),o=document.querySelector(".placementMsgBox");for(let o=0;o<100;o++){let a=e[o][1],s=e[o][2],l=document.createElement("div");l.setAttribute("id",`${e[o]}`),l.className="placeDiv",n.p1Queue[0]&&Z(l,t.length,n.p1.orientation),l.addEventListener("click",(()=>{n.p1PlaceShip([a,s]),T(n)})),"object"==typeof r[o]?(l.className="alreadyPlaced",i.appendChild(l)):i.appendChild(l)}if(void 0===n.p1Queue[n.p1Queue.length-1])return document.querySelector(".optionsMenu").style.display="none",function(n){let e=document.querySelector(".mainBody"),t=document.querySelector(".placementContainer"),r=document.querySelector(".placementMsgBox");r.innerHTML="";let i=document.createElement("div");i.id="startBtn",i.className="placeBtns",i.innerText="Start Battle!";let o=document.createElement("div");o.id="resetBtn",o.className="placeBtns",o.innerText="Reset Board",i.addEventListener("click",(()=>{1==n.p1.p1RdyStatus&&1==n.p2.p2RdyStatus||n.autoGenerate(n.p2,n.p2Queue,n.p2RdyStatus),t.style.display="none",e.style.display="flex",E(n)})),o.addEventListener("click",(()=>{n.resetBoard(),W()})),r.appendChild(i),r.appendChild(o)}(n),console.log("ready!");o.innerText=`Place your ${t.ship} (${t.length})`}function Z(n,e,t){return n.addEventListener("mouseover",(()=>{if("X"===t){let t=parseInt(n.id[1]),r=parseInt(n.id[2]);for(let n=0;n<e;n++){if(t+n>9)return;let e=document.getElementById(`a${t+n}${r}`);if("alreadyPlaced"===e.className)return;e.className="placeDivHov"}}if("Y"===t){let t=n.id[1],r=n.id[2];for(let n=0;n<e;n++){if(r-n<0)return;let e=document.getElementById(`a${t}${r-n}`);if("alreadyPlaced"===e.className)return;e.className="placeDivHov"}}})),n.addEventListener("mouseout",(()=>{if("X"===t){let t=parseInt(n.id[1]),r=parseInt(n.id[2]);for(let n=0;n<e;n++){if(t+n>9)return;let e=document.getElementById(`a${t+n}${r}`);if("alreadyPlaced"===e.className)return;e.className="placeDiv"}}if("Y"===t){let t=n.id[1],r=n.id[2];for(let n=0;n<e;n++){if(r-n<0)return;let e=document.getElementById(`a${t}${r-n}`);if("alreadyPlaced"===e.className)return;e.className="placeDiv"}}})),n}!function(){let n=document.querySelector(".openingContainer"),e=document.createElement("div");e.id="startGameButton",e.innerText="START GAME",e.addEventListener("click",W),n.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,